[main]
authc.loginUrl = /trilhas/main.xhtml 
user.loginUrl = /trilhas/main.xhtml 
roles.loginUrl = /trilhas/main.xhtml 
perms.loginUrl = /trilhas/main.xhtml 

# Create JDBC realm.
jdbcRealm = org.applicationn.simtrilhas.service.security.JdbcSaltRealm
datasource = org.apache.shiro.jndi.JndiObjectFactory
# datasource.resourceName = java:/OracleDS
 datasource.resourceName = java:/SimTrilhasProdDS
# datasource.resourceName = java:/SimTrilhasLocalDS
# if the JNDI name is prefixed with java:comp/env (like a JEE environment),
# uncomment this line:
# datasource.resourceRef = true

jdbcRealm.dataSource = $datasource 

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT password, salt FROM Users WHERE username = ? and status = 'Active'
jdbcRealm.userRolesQuery = SELECT user_role FROM USER_ROLES WHERE user_Id = (SELECT id FROM USERS WHERE username = ?)


# Configure JDBC realm password hashing.
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-512
# Base64 encoding (less text):
# credentialsMatcher.storedCredentialsHexEncoded = false
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.permissionsQuery = SELECT permission FROM ROLE_PERMISSIONS where user_role = ?

jdbcRealm.authorizationCachingEnabled = false

[urls]

# Avoid direct access to include files
/**/*Include.xhtml = perms["none"]
/trilhas/ConhecimentosBasicos/tbCONHECIMENTOSBASICOS.xhtml = authc
/trilhas/Matriz/Matriz.xhtml = authc
/trilhas/AutoTrilhas/AutoTrilhas.xhtml= authc
/trilhas/Aderencias/Comparacao.xhtml= authc
/trilhas/Cargos/Controle_cargos.xhtml= authc
/trilhas/Pessoas/Controle_Pessoas.xhtml= authc
/trilhas/AderenciaFinal/AderenciaFinal.xhtml= authc
/trilhas/Competencias/ControleCompetencias.xhtml= authc
/trilhas/AvaliacaoCargo/ControleGrade.xhtml= authc
/trilhas/Perfil/tbPERFIL.xhtml= authc
/trilhas/ConhecimentosEspecificos/tbCONHECIMENTOSESPECIFICOS.xhtml= authc
/trilhas/Area/ControleArea.xhtml= authc
/trilhas/Departamento/tbDEPTO.xhtml= authc
/trilhas/NivelOrganizacional/tbNO.xhtml= authc
/trilhas/NivelEscolaridade/ControleMascaraFormacoes.xhtml= authc
/trilhas/NivelEscolaridade/ControleMascaraTecnicos.xhtml= authc
/trilhas/NivelEscolaridade/ControleMascaraIdiomas.xhtml= authc
/trilhas/NivelEscolaridade/ControleMascaraExperencia.xhtml= authc
/trilhas/NivelEscolaridade/ControleMascaraCertificados.xhtml= authc
/trilhas/NivelEscolaridade/ControleMascaraPerfil.xhtml= authc
/trilhas/Cargos/AdicionarCargo.xhtml= authc
/trilhas/Cargos/EditarCargos.xhtml= authc
/trilhas/Cadastro/Cadastrar.xhtml= authc
/trilhas/Cadastro/Controle.xhtml= authc

/trilhas/usuario/Controle_usuarios.xhtml= authc
/trilhas/usuario/AdicionarUsuario.xhtml = authc

/pesquisas/pesquisas/Comparacao.xhtml = authc

/pesquisas/pesquisas/usuarios/AdicionarUsuario.xhtml = authc
/pesquisas/pesquisas/usuarios/EditarUsuario.xhtml = authc

# admin pages only for Administrators
/trilhas/admin/** = roles["Administrator"]

# what anomymous users can do
/login.xhtml = authc
/trilhas/main.xhtml = anon
/trilhas/user/activation.xhtml = anon
/trilhas/userManagement/resetPassword.xhtml = anon

/trilhas/user/register.xhtml = anon
/trilhas/userManagement/registerSuccess.xhtml = anon

# all other pages are available for authenticated users, only
/trilhas/** = authc
